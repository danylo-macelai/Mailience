# ------------------------------------------------------------------------------
# METADADOS DA APLICACAO
# ------------------------------------------------------------------------------

spring.application.name=@project.name@

# ------------------------------------------------------------------------------
# CONFIGURACOES DO DEVTOOLS
# ------------------------------------------------------------------------------

spring.devtools.add-properties=${VARIABLE_DEVTOOLS_ENABLED:false}
spring.devtools.restart.enabled=${VARIABLE_DEVTOOLS_ENABLED:false}
spring.devtools.livereload.enabled=${VARIABLE_DEVTOOLS_ENABLED:false}
spring.devtools.restart.additional-paths=src/main/resources/

# ------------------------------------------------------------------------------
# BANCO DE DADOS H2 EM MODO FILE
# ------------------------------------------------------------------------------

spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:h2:file:../mailience-prod;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:UMlienceBD}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:PMlienceBD@2025}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER:org.h2.Driver}

# ------------------------------------------------------------------------------
# JPA / HIBERNATE
# ------------------------------------------------------------------------------

spring.jpa.open-in-view=false
spring.jpa.generate-ddl=true
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.jdbc.fetch_size=500

# ------------------------------------------------------------------------------
# CONFIGURACOES DO JOB DE ENVIO DE EMAILS
# ------------------------------------------------------------------------------

# Ativar ou desativar o job
# true = job ativo, false = job desativado
mailience.job.enabled=true

# Delay inicial antes da primeira execucao (em segundos)
# O job so inicia depois desse tempo apos o start da aplicacao
mailience.job.initialDelay=10

# Delay fixo entre execucoes (em segundos) - 5 minutos = 300 segundos
# O job espera esse tempo APOS terminar a execucao atual antes de rodar novamente
#
# Dica rapida:
# - Usar 'fixedDelay' faz o job rodar periodicamente com espera entre execucoes
# - Se quiser agendar em horarios especificos, usar cron expression (na anotacao @Scheduled)
# - IMPORTANTE: se 'cron' for definido na anotacao @Scheduled, ele tem prioridade
#   e os atributos 'fixedDelay', 'fixedRate' e 'initialDelay' serao ignorados pelo Spring
mailience.job.fixedDelay=90
